{
	// Place your AtCoder ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	// input
	"graph": {
		"scope": "python",
		"prefix": "graph",
		"body": [
			"from collections import defaultdict",
			"n = int(input())",
			"g = defaultdict(list)",
			"for _ in range(n):",
			"    a, b = map(int, input().split())",
			"    a -= 1",
			"    b -= 1",
			"    g[a].append(b)",
			"    g[b].append(a)",
		],
		"description": "create graph"
	},

	// other
	"recursionlimit": {
		"scope": "python",
		"prefix": "recursionlimit",
		"body": [
			"import sys",
			"sys.setrecursionlimit(300000)",
		],
		"description": "再帰関数のおまじない. pythonで提出"
	},
}